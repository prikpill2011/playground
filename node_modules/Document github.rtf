{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9\par
describe('single tested frame', function () \{\par
   // test case\par
   it('Test Case7', function () \{\par
      Cypress.on('uncaught:exception', (err, runnable) => \{\par
         // returning false here prevents Cypress from\par
         // failing the test\par
         return false\par
       \});\par
      // launch the application\par
      cy.visit("https://demoqa.com/frames")\par
      cy.wait(4000)//wait for 4 second seconds\par
      cy.get ('<htm1>').get('button').click(\{force: true\});\par
         \});\par
      \});                                                                                                                 \par
\par
\par
      \par
describe('Nested Frame', function () \{\par
   // test case\par
   it('Test Case7', function () \{\par
      Cypress.on('uncaught:exception', (err, runnable) => \{\par
         // returning false here prevents Cypress from\par
         // failing the test\par
         return false\par
       \});\par
      // launch the application\par
      cy.visit("https://demoqa.com/frames")\par
      cy.wait(4000)//wait for 4 second seconds\par
      cy.get ('<body>').get('button').click(\{force: true\});\par
         \});\par
      \}); \par
describe('alert testing', function () \{\par
  // test case\par
  it('Test Case1', function ()\{\par
     Cypress.on('uncaught:exception', (err, runnable) => \{\par
        // returning false here prevents Cypress from\par
        // failing the test\par
        return false\par
      \});\par
     // launch the url\par
     cy.visit("https://demoqa.com/alerts")\par
     // click on submit button to produce the alert pop up\par
     cy.get('#alertButton').click();\par
  \});\par
\});\par
\par
        it('Test timer alert', function () \{\par
              Cypress.on('uncaught:exception', (err, runnable) => \{\par
                 // returning false here prevents Cypress from\par
                 // failing the test\par
                 return false\par
               \});\par
           // launch the url\par
           cy.visit("https://demoqa.com/alerts");\par
           // click on submit button to produce the alert pop up\par
           cy.get('#timerAlertButton').click();\par
           // wait for 5 seconds\par
           cy.wait(5000);//wait for 5 seconds\par
           cy.on('window:alert',(text) => \{\par
              //Mocha assertions\par
              expect(text).to.contains('this alert appeard after 5 seconds');\par
        \});\par
     \});\par
ALERT CODE\par
  \par
     describe('confirm alert', function () \{\par
        // test case\par
        it('Test Case3', function ()\{\par
           // launch the url\par
           cy.visit("https://demoqa.com/alerts")\par
           // click on submit button to produce the confirmation alert pop up\par
           cy.get('#confirmButton').click();\par
           // firing window: alert event with on() method\par
           cy.on('window:confirm',(txt)=>\{\par
              //Mocha assertions\par
              expect(txt).to.contains('Do you confirm action?');\par
           \})\par
        \});\par
     \});\par
LOGIN SPEC\par
\par
\par
    //Test case1- Valid loginStandard User Login \par
    describe('Standard User Login', () => \{\par
      const username = 'standard_user';\par
      const password = 'secret_sauce';\par
      \par
      it('successfully logs in with valid credentials', () => \{\par
      cy.timeout (['time-out'], 10000)\par
      cy.timeout('#username',\{timeout:4000\});\par
     \});\par
      \});\par
 // Test Case 2: Invalid Login\par
\par
  describe('Standard User Login', () => \{\par
    const invalidUsername = 'invalid_user';\par
    const invalidPassword = 'wrong_password';\par
    \par
    it('unsuccessfully logs in with invalid credentials', () => \{\par
    cy.visit('www.saucedemo.com');\par
    cy.get('#user-name').type(invalidUsername);\par
    cy.get('#password').type(invalidPassword);\par
    cy.get('#login-button').click();\par
    cy.get('[data-test="error"]').should('contain', 'Username and password do not match any user in this service');\par
    \});\par
    \});\par
    \par
\par
//Test Case 3: Navigation Through Pages\par
\par
\par
    describe('Standard User Login', () => \{\par
      const username = 'standard_user';\par
      const password = 'secret_sauce';\par
      \par
      it('navigates through different pages', () => \{\par
      cy.visit('www.saucedemo.com');\par
      cy.get('#user-name').type(username);\par
      cy.get('#password').type(password);\par
      cy.get('#login-button').click();\par
      \par
      cy.get('#inventory').click();\par
      cy.url().should('contain', '{{\field{\*\fldinst{HYPERLINK www.saucedemo.com }}{\fldrslt{www.saucedemo.com\ul0\cf0}}}}\f0\fs22 ');\par
      \par
      cy.get('#cart').click();\par
      cy.url().should('contain', '{{\field{\*\fldinst{HYPERLINK www.saucedemo.com }}{\fldrslt{www.saucedemo.com\ul0\cf0}}}}\f0\fs22 ');\par
      \par
      cy.get('#checkout').click();\par
      cy.url().should('contain', '{{\field{\*\fldinst{HYPERLINK www.saucedemo.com }}{\fldrslt{www.saucedemo.com\ul0\cf0}}}}\f0\fs22 ');\par
      \});\par
      \});\par
      \par
      \par
      //Test Case 4: Adding Items to Cart\par
      \par
      \par
      describe('Standard User Login', () => \{\par
      const username = 'standard_user';\par
      const password = 'secret_sauce';\par
      const itemName = 'Sauce Labs Backpack';\par
      \par
      it('adds item to cart', () => \{\par
      cy.visit('www.saucedemo.com');\par
      cy.get('#user-name').type(username);\par
      cy.get('#password').type(password);\par
      cy.get('#login-button').click();\par
      \par
      cy.get('#inventory_container').contains(itemName).click();\par
      cy.get('#add-to-cart').click();\par
      cy.get('#shopping_cart_container').should('contain', itemName);\par
      \});\par
      \});\par
      \par
      \par
    //Test Case 5: Checking Out_\par
      \par
      \par
      describe('Standard User Login', () => \{\par
      const username = 'standard_user';\par
      const password = 'secret_sauce';\par
      const itemName = 'Sauce Labs Backpack';\par
      \par
      it('completes checkout process', () => \{\par
      cy.visit('www.saucedemo.com');\par
      cy.get('#user-name').type(username);\par
      cy.get('#password').type(password);\par
      cy.get('#login-button').click();\par
      \par
      cy.get('#inventory_container').contains(itemName).click();\par
      cy.get('#add-to-cart').click();\par
      cy.get('#shopping_cart_container').should('contain', itemName);\par
      \par
      cy.get('#checkout').click();\par
      cy.get('#first-name').type('Test');\par
      cy.get('#last-name').type('User');\par
      cy.get('#postal-code').type('12345');\par
      cy.get('#continue').click();\par
      cy.get('#finish').click();\par
      cy.url().should('contain', '{{\field{\*\fldinst{HYPERLINK www.saucedemo.com }}{\fldrslt{www.saucedemo.com\ul0\cf0}}}}\f0\fs22 ');\par
      \});\par
      \});\par
LOGIN SPEC 2\par
describe('My First Test', () => \{\par
  it('Gets, types and asserts', () => \{\par
    cy.visit('https://example.cypress.io')\par
\par
    cy.contains('type').click()\par
\par
    // Should be on a new URL which\par
    // includes '/commands/actions'\par
    cy.url().should('include', '/commands/actions')\par
\par
    // Get an input, type into it\par
    cy.get('.action-email').type('fake@email.com')\par
\par
    //  Verify that the value has been updated\par
    cy.get('.action-email').should('have.value', 'fake@email.com')\par
  \})\par
\})\par
\par
}
 